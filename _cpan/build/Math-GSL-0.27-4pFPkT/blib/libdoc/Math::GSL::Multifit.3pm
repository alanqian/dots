.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Math::GSL::Multifit 3pm"
.TH Math::GSL::Multifit 3pm "2012-08-17" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Math::GSL::Multifit \- Least\-squares functions for a general linear model with multiple parameters
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
use Math::GSL::Multifit qw /:all/;
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The functions in this module perform least-squares fits to a general linear model, y = X c where y is a vector of n observations, X is an n by p matrix of predictor variables, and the elements of the vector c are the p unknown best-fit parameters which are to be estimated.
.PP
Here is a list of all the functions in this module :
.ie n .IP """gsl_multifit_linear_alloc($n, $p)"" \- This function allocates a workspace for fitting a model to $n observations using $p parameters." 4
.el .IP "\f(CWgsl_multifit_linear_alloc($n, $p)\fR \- This function allocates a workspace for fitting a model to \f(CW$n\fR observations using \f(CW$p\fR parameters." 4
.IX Item "gsl_multifit_linear_alloc($n, $p) - This function allocates a workspace for fitting a model to $n observations using $p parameters."
.PD 0
.ie n .IP """gsl_multifit_linear_free($work)"" \- This function frees the memory associated with the workspace w." 4
.el .IP "\f(CWgsl_multifit_linear_free($work)\fR \- This function frees the memory associated with the workspace w." 4
.IX Item "gsl_multifit_linear_free($work) - This function frees the memory associated with the workspace w."
.ie n .IP """gsl_multifit_linear($X, $y, $c, $cov, $work)"" \- This function computes the best-fit parameters vector $c of the model y = X c for the observations vector $y and the matrix of predictor variables $X. The variance-covariance matrix of the model parameters vector $cov is estimated from the scatter of the observations about the best-fit. The sum of squares of the residuals from the best-fit, \echi^2, is returned after 0 if the operation succeeded, 1 otherwise. If the coefficient of determination is desired, it can be computed from the expression R^2 = 1 \- \echi^2 / \s-1TSS\s0, where the total sum of squares (\s-1TSS\s0) of the observations y may be computed from gsl_stats_tss. The best-fit is found by singular value decomposition of the matrix $X using the preallocated workspace provided in $work. The modified Golub-Reinsch \s-1SVD\s0 algorithm is used, with column scaling to improve the accuracy of the singular values. Any components which have zero singular value (to machine precision) are discarded from the fit." 4
.el .IP "\f(CWgsl_multifit_linear($X, $y, $c, $cov, $work)\fR \- This function computes the best-fit parameters vector \f(CW$c\fR of the model y = X c for the observations vector \f(CW$y\fR and the matrix of predictor variables \f(CW$X\fR. The variance-covariance matrix of the model parameters vector \f(CW$cov\fR is estimated from the scatter of the observations about the best-fit. The sum of squares of the residuals from the best-fit, \echi^2, is returned after 0 if the operation succeeded, 1 otherwise. If the coefficient of determination is desired, it can be computed from the expression R^2 = 1 \- \echi^2 / \s-1TSS\s0, where the total sum of squares (\s-1TSS\s0) of the observations y may be computed from gsl_stats_tss. The best-fit is found by singular value decomposition of the matrix \f(CW$X\fR using the preallocated workspace provided in \f(CW$work\fR. The modified Golub-Reinsch \s-1SVD\s0 algorithm is used, with column scaling to improve the accuracy of the singular values. Any components which have zero singular value (to machine precision) are discarded from the fit." 4
.IX Item "gsl_multifit_linear($X, $y, $c, $cov, $work) - This function computes the best-fit parameters vector $c of the model y = X c for the observations vector $y and the matrix of predictor variables $X. The variance-covariance matrix of the model parameters vector $cov is estimated from the scatter of the observations about the best-fit. The sum of squares of the residuals from the best-fit, chi^2, is returned after 0 if the operation succeeded, 1 otherwise. If the coefficient of determination is desired, it can be computed from the expression R^2 = 1 - chi^2 / TSS, where the total sum of squares (TSS) of the observations y may be computed from gsl_stats_tss. The best-fit is found by singular value decomposition of the matrix $X using the preallocated workspace provided in $work. The modified Golub-Reinsch SVD algorithm is used, with column scaling to improve the accuracy of the singular values. Any components which have zero singular value (to machine precision) are discarded from the fit."
.ie n .IP """gsl_multifit_linear_svd($X, $y, $tol, $c, $cov, $work)"" \- This function computes the best-fit parameters c of the model y = X c for the observations vector $y and the matrix of predictor variables $X. The variance-covariance matrix of the model parameters vector $cov is estimated from the scatter of the observations about the best-fit. The sum of squares of the residuals from the best-fit, \echi^2, is returned after 0 if the operation succeeded, 1 otherwise. If the coefficient of determination is desired, it can be computed from the expression R^2 = 1 \- \echi^2 / \s-1TSS\s0, where the total sum of squares (\s-1TSS\s0) of the observations y may be computed from gsl_stats_tss. In this second form of the function the components are discarded if the ratio of singular values s_i/s_0 falls below the user-specified tolerance $tol, and the effective rank is returned after the sum of squares of the residuals from the best-fit." 4
.el .IP "\f(CWgsl_multifit_linear_svd($X, $y, $tol, $c, $cov, $work)\fR \- This function computes the best-fit parameters c of the model y = X c for the observations vector \f(CW$y\fR and the matrix of predictor variables \f(CW$X\fR. The variance-covariance matrix of the model parameters vector \f(CW$cov\fR is estimated from the scatter of the observations about the best-fit. The sum of squares of the residuals from the best-fit, \echi^2, is returned after 0 if the operation succeeded, 1 otherwise. If the coefficient of determination is desired, it can be computed from the expression R^2 = 1 \- \echi^2 / \s-1TSS\s0, where the total sum of squares (\s-1TSS\s0) of the observations y may be computed from gsl_stats_tss. In this second form of the function the components are discarded if the ratio of singular values s_i/s_0 falls below the user-specified tolerance \f(CW$tol\fR, and the effective rank is returned after the sum of squares of the residuals from the best-fit." 4
.IX Item "gsl_multifit_linear_svd($X, $y, $tol, $c, $cov, $work) - This function computes the best-fit parameters c of the model y = X c for the observations vector $y and the matrix of predictor variables $X. The variance-covariance matrix of the model parameters vector $cov is estimated from the scatter of the observations about the best-fit. The sum of squares of the residuals from the best-fit, chi^2, is returned after 0 if the operation succeeded, 1 otherwise. If the coefficient of determination is desired, it can be computed from the expression R^2 = 1 - chi^2 / TSS, where the total sum of squares (TSS) of the observations y may be computed from gsl_stats_tss. In this second form of the function the components are discarded if the ratio of singular values s_i/s_0 falls below the user-specified tolerance $tol, and the effective rank is returned after the sum of squares of the residuals from the best-fit."
.ie n .IP """gsl_multifit_wlinear($X, $w, $y, $c, $cov, $work"" \- This function computes the best-fit parameters vector $c of the weighted model y = X c for the observations y with weights $w and the matrix of predictor variables $X. The covariance matrix of the model parameters $cov is computed with the given weights. The weighted sum of squares of the residuals from the best-fit, \echi^2, is returned after 0 if the operation succeeded, 1 otherwise. If the coefficient of determination is desired, it can be computed from the expression R^2 = 1 \- \echi^2 / \s-1WTSS\s0, where the weighted total sum of squares (\s-1WTSS\s0) of the observations y may be computed from gsl_stats_wtss. The best-fit is found by singular value decomposition of the matrix $X using the preallocated workspace provided in $work. Any components which have zero singular value (to machine precision) are discarded from the fit." 4
.el .IP "\f(CWgsl_multifit_wlinear($X, $w, $y, $c, $cov, $work\fR \- This function computes the best-fit parameters vector \f(CW$c\fR of the weighted model y = X c for the observations y with weights \f(CW$w\fR and the matrix of predictor variables \f(CW$X\fR. The covariance matrix of the model parameters \f(CW$cov\fR is computed with the given weights. The weighted sum of squares of the residuals from the best-fit, \echi^2, is returned after 0 if the operation succeeded, 1 otherwise. If the coefficient of determination is desired, it can be computed from the expression R^2 = 1 \- \echi^2 / \s-1WTSS\s0, where the weighted total sum of squares (\s-1WTSS\s0) of the observations y may be computed from gsl_stats_wtss. The best-fit is found by singular value decomposition of the matrix \f(CW$X\fR using the preallocated workspace provided in \f(CW$work\fR. Any components which have zero singular value (to machine precision) are discarded from the fit." 4
.IX Item "gsl_multifit_wlinear($X, $w, $y, $c, $cov, $work - This function computes the best-fit parameters vector $c of the weighted model y = X c for the observations y with weights $w and the matrix of predictor variables $X. The covariance matrix of the model parameters $cov is computed with the given weights. The weighted sum of squares of the residuals from the best-fit, chi^2, is returned after 0 if the operation succeeded, 1 otherwise. If the coefficient of determination is desired, it can be computed from the expression R^2 = 1 - chi^2 / WTSS, where the weighted total sum of squares (WTSS) of the observations y may be computed from gsl_stats_wtss. The best-fit is found by singular value decomposition of the matrix $X using the preallocated workspace provided in $work. Any components which have zero singular value (to machine precision) are discarded from the fit."
.ie n .IP """gsl_multifit_wlinear_svd($X, $w, $y, $tol, $rank, $c, $cov, $work) "" This function computes the best-fit parameters vector $c of the weighted model y = X c for the observations y with weights $w and the matrix of predictor variables $X. The covariance matrix of the model parameters $cov is computed with the given weights. The weighted sum of squares of the residuals from the best-fit, \echi^2, is returned after 0 if the operation succeeded, 1 otherwise. If the coefficient of determination is desired, it can be computed from the expression R^2 = 1 \- \echi^2 / \s-1WTSS\s0, where the weighted total sum of squares (\s-1WTSS\s0) of the observations y may be computed from gsl_stats_wtss. The best-fit is found by singular value decomposition of the matrix $X using the preallocated workspace provided in $work. In this second form of the function the components are discarded if the ratio of singular values s_i/s_0 falls below the user-specified tolerance $tol, and the effective rank is returned after the sum of squares of the residuals from the best-fit.." 4
.el .IP "\f(CWgsl_multifit_wlinear_svd($X, $w, $y, $tol, $rank, $c, $cov, $work) \fR This function computes the best-fit parameters vector \f(CW$c\fR of the weighted model y = X c for the observations y with weights \f(CW$w\fR and the matrix of predictor variables \f(CW$X\fR. The covariance matrix of the model parameters \f(CW$cov\fR is computed with the given weights. The weighted sum of squares of the residuals from the best-fit, \echi^2, is returned after 0 if the operation succeeded, 1 otherwise. If the coefficient of determination is desired, it can be computed from the expression R^2 = 1 \- \echi^2 / \s-1WTSS\s0, where the weighted total sum of squares (\s-1WTSS\s0) of the observations y may be computed from gsl_stats_wtss. The best-fit is found by singular value decomposition of the matrix \f(CW$X\fR using the preallocated workspace provided in \f(CW$work\fR. In this second form of the function the components are discarded if the ratio of singular values s_i/s_0 falls below the user-specified tolerance \f(CW$tol\fR, and the effective rank is returned after the sum of squares of the residuals from the best-fit.." 4
.IX Item "gsl_multifit_wlinear_svd($X, $w, $y, $tol, $rank, $c, $cov, $work)  This function computes the best-fit parameters vector $c of the weighted model y = X c for the observations y with weights $w and the matrix of predictor variables $X. The covariance matrix of the model parameters $cov is computed with the given weights. The weighted sum of squares of the residuals from the best-fit, chi^2, is returned after 0 if the operation succeeded, 1 otherwise. If the coefficient of determination is desired, it can be computed from the expression R^2 = 1 - chi^2 / WTSS, where the weighted total sum of squares (WTSS) of the observations y may be computed from gsl_stats_wtss. The best-fit is found by singular value decomposition of the matrix $X using the preallocated workspace provided in $work. In this second form of the function the components are discarded if the ratio of singular values s_i/s_0 falls below the user-specified tolerance $tol, and the effective rank is returned after the sum of squares of the residuals from the best-fit.."
.ie n .IP """gsl_multifit_linear_est($x, $c, $cov)"" \- This function uses the best-fit multilinear regression coefficients vector $c and their covariance matrix $cov to compute the fitted function value $y and its standard deviation $y_err for the model y = x.c at the point $x, in the form of a vector. The functions returns 3 values in this order : 0 if the operation succeeded, 1 otherwise, the fittes function value and its standard deviation." 4
.el .IP "\f(CWgsl_multifit_linear_est($x, $c, $cov)\fR \- This function uses the best-fit multilinear regression coefficients vector \f(CW$c\fR and their covariance matrix \f(CW$cov\fR to compute the fitted function value \f(CW$y\fR and its standard deviation \f(CW$y_err\fR for the model y = x.c at the point \f(CW$x\fR, in the form of a vector. The functions returns 3 values in this order : 0 if the operation succeeded, 1 otherwise, the fittes function value and its standard deviation." 4
.IX Item "gsl_multifit_linear_est($x, $c, $cov) - This function uses the best-fit multilinear regression coefficients vector $c and their covariance matrix $cov to compute the fitted function value $y and its standard deviation $y_err for the model y = x.c at the point $x, in the form of a vector. The functions returns 3 values in this order : 0 if the operation succeeded, 1 otherwise, the fittes function value and its standard deviation."
.ie n .IP """gsl_multifit_linear_residuals($X, $y, $c, $r)"" \- This function computes the vector of residuals r = y \- X c for the observations vector $y, coefficients vector $c and matrix of predictor variables $X. $r is also a vector." 4
.el .IP "\f(CWgsl_multifit_linear_residuals($X, $y, $c, $r)\fR \- This function computes the vector of residuals r = y \- X c for the observations vector \f(CW$y\fR, coefficients vector \f(CW$c\fR and matrix of predictor variables \f(CW$X\fR. \f(CW$r\fR is also a vector." 4
.IX Item "gsl_multifit_linear_residuals($X, $y, $c, $r) - This function computes the vector of residuals r = y - X c for the observations vector $y, coefficients vector $c and matrix of predictor variables $X. $r is also a vector."
.ie n .IP """gsl_multifit_gradient($J, $f, $g)"" \- This function computes the gradient $g of \ePhi(x) = (1/2) ||F(x)||^2 from the Jacobian matrix $J and the function values $f, using the formula $g = $J^T $f. $g and $f are vectors." 4
.el .IP "\f(CWgsl_multifit_gradient($J, $f, $g)\fR \- This function computes the gradient \f(CW$g\fR of \ePhi(x) = (1/2) ||F(x)||^2 from the Jacobian matrix \f(CW$J\fR and the function values \f(CW$f\fR, using the formula \f(CW$g\fR = \f(CW$J\fR^T \f(CW$f\fR. \f(CW$g\fR and \f(CW$f\fR are vectors." 4
.IX Item "gsl_multifit_gradient($J, $f, $g) - This function computes the gradient $g of Phi(x) = (1/2) ||F(x)||^2 from the Jacobian matrix $J and the function values $f, using the formula $g = $J^T $f. $g and $f are vectors."
.ie n .IP """gsl_multifit_test_gradient($g, $epsabas)"" \- This function tests the residual gradient vector $g against the absolute error bound $epsabs. Mathematically, the gradient should be exactly zero at the minimum. The test returns $GSL_SUCCESS if the following condition is achieved, \esum_i |g_i| < $epsabs and returns $GSL_CONTINUE otherwise. This criterion is suitable for situations where the precise location of the minimum, x, is unimportant provided a value can be found where the gradient is small enough." 4
.el .IP "\f(CWgsl_multifit_test_gradient($g, $epsabas)\fR \- This function tests the residual gradient vector \f(CW$g\fR against the absolute error bound \f(CW$epsabs\fR. Mathematically, the gradient should be exactly zero at the minimum. The test returns \f(CW$GSL_SUCCESS\fR if the following condition is achieved, \esum_i |g_i| < \f(CW$epsabs\fR and returns \f(CW$GSL_CONTINUE\fR otherwise. This criterion is suitable for situations where the precise location of the minimum, x, is unimportant provided a value can be found where the gradient is small enough." 4
.IX Item "gsl_multifit_test_gradient($g, $epsabas) - This function tests the residual gradient vector $g against the absolute error bound $epsabs. Mathematically, the gradient should be exactly zero at the minimum. The test returns $GSL_SUCCESS if the following condition is achieved, sum_i |g_i| < $epsabs and returns $GSL_CONTINUE otherwise. This criterion is suitable for situations where the precise location of the minimum, x, is unimportant provided a value can be found where the gradient is small enough."
.ie n .IP """gsl_multifit_test_delta($dx, $x, $epsabs, $epsrel)"" \- This function tests for the convergence of the sequence by comparing the last step vector $dx with the absolute error $epsabs and relative error $epsrel to the current position x. The test returns $GSL_SUCCESS if the following condition is achieved, |dx_i| < epsabs + epsrel |x_i| for each component of x and returns $GSL_CONTINUE otherwise." 4
.el .IP "\f(CWgsl_multifit_test_delta($dx, $x, $epsabs, $epsrel)\fR \- This function tests for the convergence of the sequence by comparing the last step vector \f(CW$dx\fR with the absolute error \f(CW$epsabs\fR and relative error \f(CW$epsrel\fR to the current position x. The test returns \f(CW$GSL_SUCCESS\fR if the following condition is achieved, |dx_i| < epsabs + epsrel |x_i| for each component of x and returns \f(CW$GSL_CONTINUE\fR otherwise." 4
.IX Item "gsl_multifit_test_delta($dx, $x, $epsabs, $epsrel) - This function tests for the convergence of the sequence by comparing the last step vector $dx with the absolute error $epsabs and relative error $epsrel to the current position x. The test returns $GSL_SUCCESS if the following condition is achieved, |dx_i| < epsabs + epsrel |x_i| for each component of x and returns $GSL_CONTINUE otherwise."
.PD
.PP
The following functions are not yet implemented. Patches Welcome!
.ie n .IP """gsl_multifit_covar """ 4
.el .IP "\f(CWgsl_multifit_covar \fR" 4
.IX Item "gsl_multifit_covar "
.PD 0
.ie n .IP """gsl_multifit_fsolver_alloc($T, $n, $p)""" 4
.el .IP "\f(CWgsl_multifit_fsolver_alloc($T, $n, $p)\fR" 4
.IX Item "gsl_multifit_fsolver_alloc($T, $n, $p)"
.ie n .IP """gsl_multifit_fsolver_free """ 4
.el .IP "\f(CWgsl_multifit_fsolver_free \fR" 4
.IX Item "gsl_multifit_fsolver_free "
.ie n .IP """gsl_multifit_fsolver_set """ 4
.el .IP "\f(CWgsl_multifit_fsolver_set \fR" 4
.IX Item "gsl_multifit_fsolver_set "
.ie n .IP """gsl_multifit_fsolver_iterate """ 4
.el .IP "\f(CWgsl_multifit_fsolver_iterate \fR" 4
.IX Item "gsl_multifit_fsolver_iterate "
.ie n .IP """gsl_multifit_fsolver_name """ 4
.el .IP "\f(CWgsl_multifit_fsolver_name \fR" 4
.IX Item "gsl_multifit_fsolver_name "
.ie n .IP """gsl_multifit_fsolver_position """ 4
.el .IP "\f(CWgsl_multifit_fsolver_position \fR" 4
.IX Item "gsl_multifit_fsolver_position "
.ie n .IP """gsl_multifit_fdfsolver_alloc """ 4
.el .IP "\f(CWgsl_multifit_fdfsolver_alloc \fR" 4
.IX Item "gsl_multifit_fdfsolver_alloc "
.ie n .IP """gsl_multifit_fdfsolver_set """ 4
.el .IP "\f(CWgsl_multifit_fdfsolver_set \fR" 4
.IX Item "gsl_multifit_fdfsolver_set "
.ie n .IP """gsl_multifit_fdfsolver_iterate """ 4
.el .IP "\f(CWgsl_multifit_fdfsolver_iterate \fR" 4
.IX Item "gsl_multifit_fdfsolver_iterate "
.ie n .IP """gsl_multifit_fdfsolver_free """ 4
.el .IP "\f(CWgsl_multifit_fdfsolver_free \fR" 4
.IX Item "gsl_multifit_fdfsolver_free "
.ie n .IP """gsl_multifit_fdfsolver_name """ 4
.el .IP "\f(CWgsl_multifit_fdfsolver_name \fR" 4
.IX Item "gsl_multifit_fdfsolver_name "
.ie n .IP """gsl_multifit_fdfsolver_position """ 4
.el .IP "\f(CWgsl_multifit_fdfsolver_position \fR" 4
.IX Item "gsl_multifit_fdfsolver_position "
.PD
.PP
For more informations on the functions, we refer you to the \s-1GSL\s0 offcial
documentation: <http://www.gnu.org/software/gsl/manual/html_node/>
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.SH "AUTHORS"
.IX Header "AUTHORS"
Jonathan \*(L"Duke\*(R" Leto <jonathan@leto.net> and Thierry Moisan <thierry.moisan@gmail.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2008\-2011 Jonathan \*(L"Duke\*(R" Leto and Thierry Moisan
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
